
'number' + 3 + 3
1. рядок number + 3 = "number3"
2. рядок number3 + 3 = "number33"
результат: "number33"
Альтернативний приклад:
+'number' + 3 + 3
результат: НаН

null + 3
1. налл перетвориться в нуль, щоб можна було використати арифметичну дію
2. 0+3
результат: 3
Альтернативний приклад:
null + "3"
Результат: "null3"

5 && "qwerty"
(виводиться або перше хибне значення, або останнє істинне)
1. 5 істинне
2. кверті істинне
результат: "qwerty"
Альтернативний приклад: 5 && NaN && "qwerty"
Результат: NaN

+'40' + +'2' + "hillel";
1. 40 перетворюється на число
2. 2 перетворюється на число
3. 40+2 = 42
4. 42 + рядок = "42hillel"
Результат: "42hillel"
Альтернативний приклад: "40" + +"2" ++ "hillel"
Результат: 402NaN

'10' - 5 === 6;
1. 10 призводиться до числа
2. 10-5=5
3. 5 не дорівнює 6
Результат: False
Альтернативний приклад: "10" - 5 !==6
Результат: True

true + false
1. true = 1
2. false = 0
3. 1+0 = 1
Результат: 1
Альтернативний приклад: true > false
Результат: true

'4px' - 3
1. 4px не може бути призведене до числа, воно дає NaN
2. NaN - 3 = NaN
Результат: NaN
Альтернативний приклад: "4px" + 3 
Результат: 4px3

'4' - 3
1. 4 перетворюється в число
2. 4-3 = 1
Результат: 1
Альтернативний приклад: "4" - "3px"
Результат: NaN

'6' + 3 ** 0;
1. 3 підносимо до 0 ступені, це буде 1
2. 6 перетворюється в число // НЕПРАВИЛЬНО
3. 6+1 = 7
Результат: 7
// ПРАВИЛЬНЕ ВИРІШЕННЯ
2. "6" це рядок
3. До нього додаємо 1
4. "6"+1 = 61
Результат: 61
Альтернативний приклад:
+"6" + 3**0
Ось тут 6 перетвориться і отримаємо 7

12 / '6'
1. Оператор / вимагає числового значення, отже 6 перетворюється на число
2. 12/6=2
Результат: 2
Альтернативний приклад: 12 + "6"
Результат: 126


'10' + (5 === 6);
1. 5 не дорівнює 6, отримуємо фолс
2. конкатенація 10 і false = "10false"
Результат: "10false"
Альтернативний приклад: +"10" + +(5===6)
Результат: 10


null == ''
1. якщо порівнювати типи, то null рівний тільки undefined, отже тут буде false
Результат: false
Альтернативний приклад: null == undefined
Результат: true
Ще альтернатива: null === undefined
Результат: false, бо при строгій рівності нулл не дорівнює андефайнед

3 ** (9 / 3);
1. 9/3 = 3
2. 3 * 3 * 3 = 27
Результат: 27
Альтернативний приклад: 3 ** 9 / 3
Результат: 6561

!!'false' == !!'true'
1. рядок фолс при порівнянні дає тру
2. перше заперечення тру = фолс
3. тепер заперечуємо фолс, отримуємо тру
4. ті самі дії з "тру" дають тру
5. true == true дає теж true
Результат: true
Альтернативний приклад: !!false == !!'true'
Результат: false (бо результат перетворень лівої частини буде false)

0 || '0' && 1
1. Логічне "і" має вищий пріоритет
2. "і" повертає або першу хибу, або останню істину
3. рядок 0 = істина, 1 теж істина, повертається 1
4. логічне "або" повертає першу істину або останню хибу
5. 0 = хиба, 1 = істина
Результат: 1
Альтернативний приклад: 0 || 0 && 1
1. 0 && 1 дає 0
2. 0 || 0 дає 0
результат: 0

(+null == false) < 1;
1. налл перетворюється на 0
2. 0 == false дає нам тру
3. тру перетворюється на 1
4. 1 < 1 дає false
Результат: false
Альтернативний приклад: (!null == false) < 1
Результат: true 

false && true || true
1. false && true повертає першу хибу, фолс
2. false || true повертає першу істину, тру
Результат: true
Альтернативний приклад: false || true && true
Результат: false

false && (false || true);
1. false || true повертає першу істину, тру
2. false && true повертає першу хибу, фолс
Результат: false

(+null == false) < 1 ** 5;
1. +null дає 0
2. 0 == false дає true
3. 1**5 = 1
4. true <1
5. 1 < 1
Результат: false
Альтернативний приклад: +null == (false < 1 **5)
1. 1**5 =1
2. false < 1 =true
3. +null =0
4. 0 == true
5. 0 == 1
Результат: false